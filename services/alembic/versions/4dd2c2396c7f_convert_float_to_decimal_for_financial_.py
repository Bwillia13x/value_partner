"""Convert Float to Decimal for financial precision

Revision ID: 4dd2c2396c7f
Revises: 86af28085e34
Create Date: 2025-07-04 09:45:21.020661

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4dd2c2396c7f'
down_revision: Union[str, None] = '86af28085e34'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_orders_id', table_name='orders')
    op.drop_table('orders')
    op.add_column('accounts', sa.Column('custodian_id', sa.Integer(), nullable=True))
    op.add_column('accounts', sa.Column('portfolio_id', sa.Integer(), nullable=True))
    op.add_column('accounts', sa.Column('external_id', sa.String(length=100), nullable=True))
    op.add_column('accounts', sa.Column('is_manual', sa.Boolean(), server_default=sa.text('0'), nullable=False))
    op.add_column('accounts', sa.Column('last_synced_at', sa.DateTime(), nullable=True))
    op.alter_column('accounts', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('accounts', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('accounts', 'account_type',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
    op.alter_column('accounts', 'current_balance',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=15, scale=2),
               existing_nullable=True)
    op.alter_column('accounts', 'available_balance',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=15, scale=2),
               existing_nullable=True)
    op.alter_column('accounts', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('accounts', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('accounts', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_index('ix_accounts_plaid_account_id', table_name='accounts')
    op.drop_constraint(None, 'accounts', type_='foreignkey')
    op.create_foreign_key(None, 'accounts', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'accounts', 'custodians', ['custodian_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'accounts', 'portfolios', ['portfolio_id'], ['id'], ondelete='SET NULL')
    op.drop_column('accounts', 'plaid_account_id')
    op.drop_column('accounts', 'institution_id')
    op.drop_column('accounts', 'institution_name')
    op.add_column('holdings', sa.Column('cost_basis_per_share', sa.Numeric(precision=12, scale=4), nullable=True))
    op.add_column('holdings', sa.Column('unrealized_pl', sa.Numeric(precision=15, scale=2), nullable=True))
    op.add_column('holdings', sa.Column('unrealized_pl_pct', sa.Numeric(precision=8, scale=4), nullable=True))
    op.alter_column('holdings', 'account_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('holdings', 'symbol',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('holdings', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('holdings', 'quantity',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=15, scale=6),
               nullable=False)
    op.alter_column('holdings', 'market_value',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=15, scale=2),
               nullable=False)
    op.alter_column('holdings', 'cost_basis',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=15, scale=2),
               existing_nullable=True)
    op.alter_column('holdings', 'unit_price',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=12, scale=4),
               existing_nullable=True)
    op.alter_column('holdings', 'last_updated',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('holdings', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_constraint(None, 'holdings', type_='foreignkey')
    op.create_foreign_key(None, 'holdings', 'accounts', ['account_id'], ['id'], ondelete='CASCADE')
    op.alter_column('strategies', 'rebalance_threshold',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=5, scale=2),
               existing_nullable=True)
    op.alter_column('strategy_holdings', 'target_weight',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=5, scale=4),
               existing_nullable=True)
    op.add_column('transactions', sa.Column('external_id', sa.String(length=100), nullable=True))
    op.add_column('transactions', sa.Column('fee', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('transactions', sa.Column('is_recurring', sa.Boolean(), server_default=sa.text('0'), nullable=False))
    op.add_column('transactions', sa.Column('notes', sa.Text(), nullable=True))
    op.alter_column('transactions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('transactions', 'account_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('transactions', 'transaction_type',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
    op.alter_column('transactions', 'amount',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=15, scale=2),
               nullable=False)
    op.alter_column('transactions', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('transactions', 'date',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('transactions', 'quantity',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=15, scale=6),
               existing_nullable=True)
    op.alter_column('transactions', 'unit_price',
               existing_type=sa.FLOAT(),
               type_=sa.Numeric(precision=12, scale=4),
               existing_nullable=True)
    op.alter_column('transactions', 'is_pending',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('transactions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.alter_column('transactions', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=False)
    op.drop_index('ix_transactions_plaid_transaction_id', table_name='transactions')
    op.create_index(op.f('ix_transactions_external_id'), 'transactions', ['external_id'], unique=True)
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.create_foreign_key(None, 'transactions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'transactions', 'accounts', ['account_id'], ['id'], ondelete='CASCADE')
    op.drop_column('transactions', 'plaid_transaction_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('transactions', sa.Column('plaid_transaction_id', sa.VARCHAR(), nullable=True))
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.create_foreign_key(None, 'transactions', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'transactions', 'accounts', ['account_id'], ['id'])
    op.drop_index(op.f('ix_transactions_external_id'), table_name='transactions')
    op.create_index('ix_transactions_plaid_transaction_id', 'transactions', ['plaid_transaction_id'], unique=False)
    op.alter_column('transactions', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('transactions', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('transactions', 'is_pending',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('transactions', 'unit_price',
               existing_type=sa.Numeric(precision=12, scale=4),
               type_=sa.FLOAT(),
               existing_nullable=True)
    op.alter_column('transactions', 'quantity',
               existing_type=sa.Numeric(precision=15, scale=6),
               type_=sa.FLOAT(),
               existing_nullable=True)
    op.alter_column('transactions', 'date',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('transactions', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('transactions', 'amount',
               existing_type=sa.Numeric(precision=15, scale=2),
               type_=sa.FLOAT(),
               nullable=True)
    op.alter_column('transactions', 'transaction_type',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
    op.alter_column('transactions', 'account_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('transactions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('transactions', 'notes')
    op.drop_column('transactions', 'is_recurring')
    op.drop_column('transactions', 'fee')
    op.drop_column('transactions', 'external_id')
    op.alter_column('strategy_holdings', 'target_weight',
               existing_type=sa.Numeric(precision=5, scale=4),
               type_=sa.FLOAT(),
               existing_nullable=True)
    op.alter_column('strategies', 'rebalance_threshold',
               existing_type=sa.Numeric(precision=5, scale=2),
               type_=sa.FLOAT(),
               existing_nullable=True)
    op.drop_constraint(None, 'holdings', type_='foreignkey')
    op.create_foreign_key(None, 'holdings', 'accounts', ['account_id'], ['id'])
    op.alter_column('holdings', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('holdings', 'last_updated',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('holdings', 'unit_price',
               existing_type=sa.Numeric(precision=12, scale=4),
               type_=sa.FLOAT(),
               existing_nullable=True)
    op.alter_column('holdings', 'cost_basis',
               existing_type=sa.Numeric(precision=15, scale=2),
               type_=sa.FLOAT(),
               existing_nullable=True)
    op.alter_column('holdings', 'market_value',
               existing_type=sa.Numeric(precision=15, scale=2),
               type_=sa.FLOAT(),
               nullable=True)
    op.alter_column('holdings', 'quantity',
               existing_type=sa.Numeric(precision=15, scale=6),
               type_=sa.FLOAT(),
               nullable=True)
    op.alter_column('holdings', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('holdings', 'symbol',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('holdings', 'account_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('holdings', 'unrealized_pl_pct')
    op.drop_column('holdings', 'unrealized_pl')
    op.drop_column('holdings', 'cost_basis_per_share')
    op.add_column('accounts', sa.Column('institution_name', sa.VARCHAR(), nullable=True))
    op.add_column('accounts', sa.Column('institution_id', sa.VARCHAR(), nullable=True))
    op.add_column('accounts', sa.Column('plaid_account_id', sa.VARCHAR(), nullable=True))
    op.drop_constraint(None, 'accounts', type_='foreignkey')
    op.drop_constraint(None, 'accounts', type_='foreignkey')
    op.drop_constraint(None, 'accounts', type_='foreignkey')
    op.create_foreign_key(None, 'accounts', 'users', ['user_id'], ['id'])
    op.create_index('ix_accounts_plaid_account_id', 'accounts', ['plaid_account_id'], unique=False)
    op.alter_column('accounts', 'updated_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('accounts', 'created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.alter_column('accounts', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('accounts', 'available_balance',
               existing_type=sa.Numeric(precision=15, scale=2),
               type_=sa.FLOAT(),
               existing_nullable=True)
    op.alter_column('accounts', 'current_balance',
               existing_type=sa.Numeric(precision=15, scale=2),
               type_=sa.FLOAT(),
               existing_nullable=True)
    op.alter_column('accounts', 'account_type',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
    op.alter_column('accounts', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('accounts', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('accounts', 'last_synced_at')
    op.drop_column('accounts', 'is_manual')
    op.drop_column('accounts', 'external_id')
    op.drop_column('accounts', 'portfolio_id')
    op.drop_column('accounts', 'custodian_id')
    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('account_id', sa.INTEGER(), nullable=True),
    sa.Column('strategy_id', sa.INTEGER(), nullable=True),
    sa.Column('symbol', sa.VARCHAR(), nullable=False),
    sa.Column('side', sa.VARCHAR(length=4), nullable=False),
    sa.Column('quantity', sa.FLOAT(), nullable=False),
    sa.Column('order_type', sa.VARCHAR(length=13), nullable=False),
    sa.Column('time_in_force', sa.VARCHAR(length=3), nullable=True),
    sa.Column('limit_price', sa.FLOAT(), nullable=True),
    sa.Column('stop_price', sa.FLOAT(), nullable=True),
    sa.Column('trail_percent', sa.FLOAT(), nullable=True),
    sa.Column('trail_price', sa.FLOAT(), nullable=True),
    sa.Column('filled_quantity', sa.FLOAT(), nullable=True),
    sa.Column('average_fill_price', sa.FLOAT(), nullable=True),
    sa.Column('commission', sa.FLOAT(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=16), nullable=True),
    sa.Column('broker_order_id', sa.VARCHAR(), nullable=True),
    sa.Column('client_order_id', sa.VARCHAR(), nullable=True),
    sa.Column('extended_hours', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('submitted_at', sa.DATETIME(), nullable=True),
    sa.Column('filled_at', sa.DATETIME(), nullable=True),
    sa.Column('broker_data', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_orders_id', 'orders', ['id'], unique=False)
    # ### end Alembic commands ###
